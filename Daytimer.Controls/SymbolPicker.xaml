<ComboBox x:Class="Daytimer.Controls.SymbolPicker" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" d:DesignHeight="300"
		d:DesignWidth="300" IsEnabledChanged="ComboBox_IsEnabledChanged">
	<ComboBox.Style>
		<Style TargetType="ComboBox">
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="White" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition MinWidth="17" Width="0" />
							</Grid.ColumnDefinitions>
							<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2"
									IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
									PopupAnimation="Fade" Placement="Bottom" HorizontalOffset="-5" VerticalOffset="-6">
								<Popup.Style>
									<Style TargetType="Popup">
										<Setter Property="CacheMode">
											<Setter.Value>
												<BitmapCache />
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<Trigger Property="IsOpen" Value="True">
												<Trigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation Storyboard.TargetProperty="VerticalOffset"
																	From="-20" Duration="0:0:0.3">
																<DoubleAnimation.EasingFunction>
																	<QuarticEase />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
														</Storyboard>
													</BeginStoryboard>
												</Trigger.EnterActions>
											</Trigger>
										</Style.Triggers>
									</Style>
								</Popup.Style>
								<Border MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border.Effect>
										<DropShadowEffect Color="#FFBBBBBB" ShadowDepth="0" RenderingBias="Performance"
												Opacity="0.5" />
									</Border.Effect>
									<Border x:Name="DropDownBorder" BorderBrush="#FF828790" BorderThickness="1"
											Background="{DynamicResource White}" Margin="5">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="*" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<ScrollViewer x:Name="DropDownScrollViewer">
												<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" Margin="1">
													<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
															VerticalAlignment="Top" Width="0">
														<Rectangle x:Name="OpaqueRect"
																Fill="{Binding Background, ElementName=DropDownBorder}"
																Height="{Binding ActualHeight, ElementName=DropDownBorder}"
																Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
													</Canvas>
													<ItemsPresenter x:Name="ItemsPresenter"
															KeyboardNavigation.DirectionalNavigation="Contained"
															SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
												</Grid>
											</ScrollViewer>
											<Border Grid.Row="1" Height="1" BorderBrush="#FFE2E4E7" BorderThickness="1"
													Margin="1,1,1,0" VerticalAlignment="Top" />
											<Button x:Name="moreButton" Grid.Row="1" Click="moreButton_Click"
													BorderThickness="0" Background="Transparent" Width="Auto"
													Height="24" Margin="1,3,1,1" HorizontalContentAlignment="Left"
													ToolTip="Insert a Symbol" MinWidth="0">
												<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"
														IsHitTestVisible="False">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition Width="*" />
													</Grid.ColumnDefinitions>
													<Image
															Source="pack://application:,,,/Daytimer.Images;component/Images/symbol.png"
															HorizontalAlignment="Center" Stretch="None" Margin="3,0" />
													<TextBlock Grid.Column="1" Text="More Symbols..."
															VerticalAlignment="Center" IsHitTestVisible="False"
															SnapsToDevicePixels="True" Margin="6,0" />
												</Grid>
											</Button>
										</Grid>
									</Border>
								</Border>
							</Popup>
							<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<ToggleButton.Style>
									<Style TargetType="ToggleButton">
										<Setter Property="OverridesDefaultStyle" Value="True" />
										<Setter Property="IsTabStop" Value="False" />
										<Setter Property="Focusable" Value="False" />
										<Setter Property="ClickMode" Value="Release" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="ToggleButton">
													<Border x:Name="templateRoot" BorderBrush="#FFACACAC"
															BorderThickness="{TemplateBinding BorderThickness}"
															SnapsToDevicePixels="True" Background="Transparent">
														<Border x:Name="splitBorder" BorderBrush="Transparent"
																BorderThickness="1" HorizontalAlignment="Right"
																Margin="0" SnapsToDevicePixels="True" Width="17">
															<Path x:Name="Arrow"
																	Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
																	Fill="#FF606060" HorizontalAlignment="Center"
																	Margin="0,2,0,0" VerticalAlignment="Center" />
														</Border>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Fill" TargetName="Arrow" Value="Black" />
															<Setter Property="Background" TargetName="templateRoot"
																	Value="{DynamicResource RibbonMouseOver}" />
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Fill" TargetName="Arrow" Value="Black" />
															<Setter Property="Background" TargetName="templateRoot"
																	Value="{DynamicResource RibbonPressed}" />
														</Trigger>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Fill" TargetName="Arrow" Value="Black" />
															<Setter Property="Background" TargetName="templateRoot"
																	Value="{DynamicResource RibbonChecked}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"
									IsHitTestVisible="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Image Source="pack://application:,,,/Daytimer.Images;component/Images/symbol.png"
										HorizontalAlignment="Center" Stretch="None" VerticalAlignment="Center" />
								<TextBlock Grid.Column="1" Text="Symbol" IsHitTestVisible="False"
										SnapsToDevicePixels="True" VerticalAlignment="Center" Margin="2,0,0,0" />
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocusWithin" Value="True">
								<Setter Property="Foreground" Value="Black" />
							</Trigger>
							<Trigger Property="HasItems" Value="False">
								<Setter Property="Height" TargetName="DropDownBorder" Value="95" />
							</Trigger>
							<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
								<Setter Property="Canvas.Top" TargetName="OpaqueRect"
										Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
								<Setter Property="Canvas.Left" TargetName="OpaqueRect"
										Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.5" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</ComboBox.Style>
	<ComboBox.Resources>
		<Style TargetType="ComboBoxItem">
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Width" Value="30" />
			<Setter Property="Height" Value="30" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="FontSize" Value="13.667" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3"
								SnapsToDevicePixels="True" Background="Transparent">
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
									Content="{TemplateBinding Content}"
									ContentStringFormat="{TemplateBinding ContentStringFormat}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource RibbonMouseOver}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource RibbonPressed}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FF6D6D6D" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</ComboBox.Resources>
</ComboBox>
