<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style TargetType="TabControl">
		<Setter Property="TabStripPlacement" Value="Left" />
		<Setter Property="Margin" Value="0,42,0,0" />
		<Setter Property="Padding" Value="20,1" />
		<Setter Property="SelectedIndex" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TabPanel x:Name="HeaderPanel" IsItemsHost="True" Margin="2,2,1,2"
								KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
						<Line Stroke="#FFE1E1E1" StrokeThickness="1" Width="1" HorizontalAlignment="Right" Y2="1"
								Stretch="Fill" IsHitTestVisible="False" />
						<Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
								Background="{DynamicResource White}"
								KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local" Grid.Column="1" Padding="35,8"
								RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TranslateTransform x:Name="ContentPanelTransform" />
							</Border.RenderTransform>
							<Border.CacheMode>
								<BitmapCache SnapsToDevicePixels="False" />
							</Border.CacheMode>
							<ContentPresenter x:Name="PART_SelectedContentHost"
									Content="{TemplateBinding SelectedContent}" ContentSource="SelectedContent"
									SnapsToDevicePixels="False" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="TabItem">
		<Setter Property="Width" Value="277" />
		<Setter Property="Height" Value="60" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Margin" Value="0,0,0,5" />
		<Setter Property="Foreground" Value="{DynamicResource Black}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Border x:Name="Border" Background="Transparent" BorderThickness="1" BorderBrush="Transparent"
							Margin="0,0,0,5">
						<ContentPresenter Content="{TemplateBinding Header}" HorizontalAlignment="Left"
								VerticalAlignment="Center" Margin="8,0" IsHitTestVisible="False" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource RibbonMouseOver}" />
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource RibbonMouseOver}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource RibbonPressed}" />
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource RibbonPressed}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource RibbonPressed}" />
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource RibbonPressed}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="Border" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate />
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>